{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","Cardlist","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","component","App","_Component","onsearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_Cardlist","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.6178fe67.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ( {name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({ robots }) => {\n    return (\n        <div>\n            {\n            robots.map((user, i) => {\n             return ( \n                <Card \n                key={i}\n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email}\n                 />\n             );\n            })\n        }\n    \n        </div>\n    );\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='pa2'>\n        <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type= 'search' \n            placeholder= 'search robots' \n            onChange={searchChange}\n            />\n        </div>\n        );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props)=> {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n          {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { component} from 'react';\n\nclass ErrorBoundry extends component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render(){\n        if (this.state.hasError) {\n            return <h1> Oooops. This is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n       robots: [],\n       searchfield: ''\n       }\n   }\n\ncomponentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n    .then(users => this.setState({ robots: users}));\n }\nonsearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })    \n }\n\n    render() {\n      const { robots, searchfield } = this.state;\n     const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n     })\n     return !robots.length ?\n       <h1>loading</h1> :\n     (\n        <div className='tc'>\n            <h1 className='f1' >RoboFriends</h1>\n            <SearchBox searchChange={this.onsearchChange}/>\n            <Scroll>\n              <ErrorBoundry>\n              <Cardlist robots={filteredRobots} />\n              </ErrorBoundry>\n            </Scroll>\n        </div>\n     );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <div>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </div>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}